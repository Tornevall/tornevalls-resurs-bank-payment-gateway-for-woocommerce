<?php

namespace ResursBank\Module;

use Resursbank\Ecom\Config;
use Resursbank\Ecom\Exception\ConfigException;
use Resursbank\Ecom\Exception\Validation\MissingKeyException;
use Resursbank\Woocommerce\Modules\PaymentInformation\Module;
use Resursbank\Woocommerce\Util\Metadata;
use Throwable;
use WC_Order;
use WP_Post;

/**
 * @since 0.0.1.7
 */
class OrderMetaBox
{
    /**
     * @param WP_Post $post
     * @throws ConfigException
     */
    public static function output_order(WP_Post $post): void
    {
        if (!$post instanceof WP_Post && $post->post_type !== 'shop_order') {
            return;
        }
        $order = new WC_Order(order: $post->ID);

        if (Metadata::isValidResursPayment(order: $order)) {
            $orderData = Metadata::getOrderInfo(order: $order);
            try {
                $paymentInformation = new Module(paymentId: self::getResursBankPaymentId(orderData: $orderData));
                echo Data::getEscapedHtml(content: $paymentInformation->widget->content);
            } catch (Throwable $error) {
                echo '<b>' . $error->getMessage() . '</b>';
                Config::getLogger()->error(message: $error);
            }
        }
    }

    /**
     * Fetches payment id from orderData array generated by Data::getOrderInfo
     *
     * @param array $orderData
     * @return string
     * @throws MissingKeyException
     */
    private static function getResursBankPaymentId(array $orderData): string
    {
        if (!isset($orderData['meta']['resursbank_payment_id'][0])) {
            throw new MissingKeyException(message: 'Missing resursbank_payment_id in metadata');
        }

        return $orderData['meta']['resursbank_payment_id'][0];
    }

}
