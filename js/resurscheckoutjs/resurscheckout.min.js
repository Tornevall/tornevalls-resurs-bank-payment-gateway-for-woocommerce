/*!
 * ResursCheckoutJS v0.10
 *  Generic Resurs Bank iFrame-driver for Resurs Checkout, for catching events in the Resurs Checkout iFrame.
 *  Used for the older version of RCO-Interceptor, maintenance only!
 *  Docs and info-urls resides in the non-minified version.
 *  Maintained by Resurs Bank: onboarding@resurs.se
 *
 */
;if(typeof ResursCheckout!=="function"&&typeof ResursCheckout==="undefined"){function ResursCheckout(){var f="checkout";var m="";var i="";var o="0.10";var c={paymentMethod:"",customerData:{}};var g=false;var e=null;var h=null;var d=null;var b=null;var j=null;var a=null;if(typeof arguments[0]!=="undefined"){m=arguments[0]}else{m="resurs-checkout-container"}if(m.substr(0,1)==="#"){m=m.substr(1)}if(null===document.getElementById(m)&&null!==document.getElementById("omni-checkout-container")){m="omni-checkout-container";if(g){console.log("ResursCheckoutJS: [Config] Former element of Resurs Checkout is present")}}if(null!==document.getElementById(m)){a=document.getElementById(m);if(g){console.log("ResursCheckoutJS: [Config] iframe container is set to "+m)}}var l="";if(typeof RESURSCHECKOUT_IFRAME_URL!=="undefined"){l=RESURSCHECKOUT_IFRAME_URL}if(typeof OMNICHECKOUT_IFRAME_URL!=="undefined"){l=OMNICHECKOUT_IFRAME_URL}var k=function(q){var p;if(null!==a){if(g){console.log("ResursCheckoutJS: [PrePostMessage] Using resursPostMessageElement as destination")}i=a.getElementsByTagName("iframe")[0];p=i.contentWindow||i.contentDocument}else{if(g){console.log("ResursCheckoutJS: [PrePostMessage] Locating postMessage-element as resursPostMessageElement is missing")}i=document.getElementsByTagName("iframe")[0];p=i.contentWindow||i.contentDocument}if(p&&typeof p.postMessage==="function"&&typeof i.src!=="undefined"&&typeof l==="string"&&l!==""&&i.src.indexOf(l)>-1){if(g){console.log("ResursCheckoutJS: [postMessage] "+JSON.stringify(q))}p.postMessage(JSON.stringify(q),l)}else{if(g){console.log("ResursCheckoutJS: [postMessage] iframe window missing postMessage function")}}};var n={setBookingCallback:function(p){e=p},setPurchaseFailCallback:function(p){h=p},setPurchaseDeniedCallback:function(p){d=p},setCustomerChangedEventCallback:function(p){b=p},setOnIframeReady:function(p){j=p},setDebug:function(p){if(p==1){p=true}g=p;console.log("ResursCheckoutJS: [Config] Verbosity level raised")},confirmOrder:function(p){if(typeof p!=="boolean"){p=false}if(g){console.log("ResursCheckoutJS: [Outbound] Confirm order with boolean: "+p)}k({eventType:f+":order-status",orderReady:p})},postFrame:function(p){if(typeof p==="object"){if(g){console.log("ResursCheckoutJS: [Outbound] Sending message to iframe: "+JSON.stringify(p))}k(p)}},init:function(){window.addEventListener("message",function(s){var r=s.origin||s.originalEvent.origin;if(r!==l||typeof s.data!=="string"){return}var p=s.data;var q={};try{q=JSON.parse(p)}catch(t){return}if(q.hasOwnProperty("eventType")&&typeof q.eventType==="string"){switch(q.eventType){case f+":loaded":k({eventType:f+":set-purchase-button-interceptor",checkOrderBeforeBooking:true});if(typeof j==="function"){j(i)}break;default:if(q.eventType.indexOf(f)>-1){if(q.eventType==f+":payment-method-change"){if(g){console.log("ResursCheckoutJS: [Inbound] payment-method-change")}c.paymentMethod=q.method}else{if(q.eventType==f+":user-info-change"){if(g){console.log("ResursCheckoutJS: [Inbound] user-info-change")}c.customerData={address:(typeof q.address!=="undefined"?q.address:{}),delivery:(typeof q.delivery!=="undefined"?q.delivery:{}),ssn:q.ssn,paymentMethod:(typeof c.paymentMethod!=="undefined"?c.paymentMethod:"")};if(typeof b==="function"){b(c)}}else{if(q.eventType==f+":purchase-failed"){if(typeof h==="function"){h()}else{if(typeof h==="string"){if(typeof window[h]==="function"){window[h]()}}}}else{if(q.eventType==f+":purchase-denied"){if(typeof d==="function"){d()}else{if(typeof d==="string"){if(typeof window[d]==="function"){window[d]()}}}}else{if(q.eventType==f+":puchase-button-clicked"){if(typeof e==="function"){if(g){console.log("ResursCheckoutJS: [Outbound] puchase-button-clicked event received, bounce back through user defined callback.")}e(c,q)}else{if(typeof e==="string"){if(typeof window[e]==="function"){window[e](c,q)}}else{if(g){console.log("ResursCheckoutJS: [Outbound] puchase-button-clicked event received and no user defined callbacks was found. Cosidering autoConfirm.")}k({eventType:f+":order-status",orderReady:true})}}}}}}}}}}},false)}};return n}};
