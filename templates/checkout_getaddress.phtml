<?php

/** @noinspection PhpUndefinedVariableInspection */

global $legacyVariables;

use Resursbank\Ecom\Config;
use Resursbank\Ecom\Lib\Order\CustomerType;
use ResursBank\Module\Data;
use ResursBank\Service\WooCommerce;
use ResursBank\Service\WordPress;

if ($legacyVariables['get_address_form'] || $legacyVariables['get_address_form_always']) { ?>
  <span id="rbGetAddressFields">
    <div>
        <input type="radio"
               id="resursSsnCustomerTypeNatural"
               onclick="setResursGetAddressCustomerType(this)"
               name="resursSsnCustomerType"
               value="NATURAL"
               <?php
               echo $legacyVariables['customer_type'] === CustomerType::NATURAL ? 'checked=checked' : ''
               ?>
        > <?php echo esc_html($legacyVariables['customer_private']); ?>
        <input type="radio"
               id="resursSsnCustomerTypeLegal"
               onclick="setResursGetAddressCustomerType(this)"
               name="resursSsnCustomerType"
               value="LEGAL"
               <?php echo $legacyVariables['customer_type'] === CustomerType::LEGAL ? 'checked=checked' : '' ?>
        > <?php echo esc_html($legacyVariables['customer_company']); ?>
    </div>
    <div class="woocommerce-input-wrapper">
        <input
            class="input-text"
            type="text" size="32"
            id="resursSsnIdentification"
            onkeyup="setBillingInherit(this)"
            name="resursSsnIdentification">

        <?php
        if (!Config::isProduction()) {
            $customerCountry = strtoupper(Data::getCustomerCountry());
            $chosenCustomerType = Data::getCustomerType();
            $civicNumberOptions = [];
            if (empty($chosenCustomerType)) {
                // We can not rely on the CustomerType enum here.
                $chosenCustomerType = WooCommerce::hasMethodsNatural() ? CustomerType::NATURAL : CustomerType::LEGAL;
            }
            if (isset($legacyVariables['liveTestData'][$customerCountry]['payments']['civicNumber']) &&
                is_array($legacyVariables['liveTestData'][$customerCountry]['payments']['civicNumber']) &&
                count($legacyVariables['liveTestData'][$customerCountry]['payments']['civicNumber'])
            ) {
                $civicNumberList = $legacyVariables['liveTestData'][$customerCountry]['payments']['civicNumber'];
                if (count($civicNumberList)) {
                    foreach ($civicNumberList as $civicType => $civicNumber) {
                        $isCompanyCivic = (bool)preg_match('/^company/i', $civicType);
                        // We can not rely on the CustomerType enum here.
                        if (($chosenCustomerType !== CustomerType::LEGAL && $isCompanyCivic) ||
                            ($chosenCustomerType !== CustomerType::NATURAL && !$isCompanyCivic)) {
                            continue;
                        }
                        $civicNumberOptions[] = sprintf(
                            '<option value="%s">%s (%s)</option>',
                            $civicNumber,
                            $civicType,
                            $civicNumber
                        );
                    }
                }
            } ?>
          <div class="woocommerce-input-wrapper" id="rbwc_extended_test_mode_helper">
                <select id="rbwc_civic_number_selector"
                        size="<?php echo count($civicNumberOptions) ?? 1 ?>"
                        onchange="rbwcSetCivicNumber(this)">
                    <?php
                    echo Data::getEscapedHtml(implode('', $civicNumberOptions)); ?>
                </select>
            </div>
            <?php
        }
        ?>

    </div>
    <div style="display: none;" class="resursGetAddressError"></div>
    <div id="resursGetAddressSpinnify" style="display: none;"></div>
    <?php
    if ($legacyVariables['supported_country'] && $legacyVariables['get_address_form']) { ?>
      <div>
            <button id="rbGetResursAddressButton"
                    onclick="getResursAddress();return false;"><?php echo esc_html($legacyVariables['customer_button_text']); ?></button>
        </div>
    <?php } ?>
</span>
    <?php
} else {
    $currentCustomerType = Data::getCustomerType();
    if (empty($currentCustomerType)) {
        // What we default to depends on what we have.
        $chosenCustomerType = WooCommerce::hasMethodsNatural() ? CustomerType::NATURAL : CustomerType::LEGAL;
    } else {
        $chosenCustomerType = $currentCustomerType;
    }

    if (WooCommerce::hasDualCustomerTypes()) {
        $switchToMessageString = WordPress::applyFilters(
            'getSwitchToCustomerTypeString',
            $chosenCustomerType === CustomerType::LEGAL ? 'LEGAL' : 'NATURAL',
            ''
        ); ?>
      <button
          type="button"
          id="rbCustomerSwitchButton"
          onclick="rbSwitchCustomerType()"><?php echo esc_html($switchToMessageString) ?></button>
      <input
          type="hidden"
          id="resursSsnCustomerType"
          name="resursSsnCustomerType"
          value="<?php echo esc_html($chosenCustomerType) ?>">
        <?php
    }
}
?>
