#!/bin/sh -eu

if [ ! -d .git/hooks ]; then
  echo "Error: Please run this script from the root of the repository."
  exit 1;
fi

# Resolve PHP cmd.
dockerCmd=""
phpService=""
phpCmd=""

read -p "Running PHP in Docker (y/n)?" localPhp
case "$localPhp" in
  y|Y ) read -p "Enter name of docker compose command (eg. docker compose or docker-compose): " dockerCmd; read -p "Enter name of php server (eg. php or phpfpm): " phpService; phpCmd="${dockerCmd} exec -T ${phpService}";;
  n|N ) read -p "Enter name of/path to php binary (eg. php): " php;;
  * ) echo "Invalid response."; exit 1;;
esac

read -p "Enter path to website root directory within PHP container (no trailing slash): " dir

HOOK_FILE=".git/hooks/pre-commit"

if [ -f $HOOK_FILE ]; then
  rm -f $HOOK_FILE
fi

touch $HOOK_FILE
chmod +x $HOOK_FILE

cat <<EOT >> $HOOK_FILE
#!/usr/bin/env -S bash -eu

echo "=========================================================="
echo "Running tests."
echo ""
echo "---==( Executing Psalm tests. )==---"
echo ""
$phpCmd $dir/vendor/bin/psalm -c $dir/qa/psalm/psalm.xml --show-info=true
echo ""
echo "---==( Executing PHPMD tests on source files. )==---"
echo ""
$phpCmd $dir/vendor/bin/phpmd $dir/src text $dir/qa/phpmd/src.xml
echo ""
echo "---==( Executing PHPMD tests on test files. )==---"
echo ""
$phpCmd $dir/vendor/bin/phpmd $dir/tests text $dir/qa/phpmd/tests.xml
echo ""
echo "---==( Executing PHP CBF for source files. )==---"
echo ""
$phpCmd $dir/vendor/bin/phpcbf --standard=PSR12 $dir/src
echo ""
echo "---==( Executing PHP CBF for test files. )==---"
echo ""
$phpCmd $dir/vendor/bin/phpcbf --standard=PSR12 $dir/tests
echo ""
echo "---==( Executing PHPCS for source files. )==---"
echo ""
$phpCmd $dir/vendor/bin/phpcs --standard=PSR12 $dir/src
echo ""
echo "---==( Executing PHPCS for test files. )==---"
echo ""
$phpCmd $dir/vendor/bin/phpcs --standard=PSR12 $dir/tests
echo ""
echo "---==( Executing PHPStan for source files. )==---"
echo ""
$phpCmd $dir/vendor/bin/phpstan analyse -c $dir/qa/phpstan.neon $dir/src
echo ""
echo "---==( Executing PHPStan for test files. )==---"
echo ""
$phpCmd $dir/vendor/bin/phpstan analyse -c $dir/qa/phpstan.neon $dir/tests
echo ""
echo "---==( Executing PHP CS Fixer for source files. )==---"
echo ""
$phpCmd $dir/vendor/bin/php-cs-fixer --cache-file=$dir/qa/php-cs-fixer/.php-cs-fixer.cache fix $dir/src
echo ""
echo "---==( Executing PHP CS Fixer for test files. )==---"
echo ""
$phpCmd $dir/vendor/bin/php-cs-fixer --cache-file=$dir/qa/php-cs-fixer/.php-cs-fixer.cache fix $dir/tests
EOT

if [ ! -d ./qa/psalm/cache ]; then
  mkdir ./qa/psalm/cache
fi

if [ ! -f ./qa/php-cs-fixer/.php-cs-fixer.cache ]; then
  touch ./qa/php-cs-fixer/.php-cs-fixer.cache
fi

echo OK
exit 0
